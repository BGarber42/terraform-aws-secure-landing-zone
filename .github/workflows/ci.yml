name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  security-events: write

env:
  AWS_DEFAULT_REGION: us-east-1
  TF_LOG: INFO

jobs:
  fmt-lint:
    name: Terraform Format and Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"
        
    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      
    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: v0.52.0
        
    - name: TFLint
      run: tflint --init && tflint

  validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        example: [basic, full, advanced]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Terraform Init and Validate
      run: |
        cd examples/${{ matrix.example }}
        terraform init
        terraform validate
        terraform plan -out=tfplan

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"
        
    - name: Run tfsec
      uses: aquasecurity/tfsec-sarif-action@v0.1.0
      with:
        sarif_file: tfsec.sarif     
        
    - name: Check if SARIF file exists
      run: |
        if [ -f tfsec.sarif ]; then
          echo "SARIF file found:"
          ls -la tfsec.sarif
          echo "File content preview:"
          head -20 tfsec.sarif
        else
          echo "SARIF file not found. Creating empty file for upload."
          echo '{"version":"2.1.0","$schema":"https://json.schemastore.org/sarif-2.1.0-rtm.5.json","runs":[]}' > tfsec.sarif
        fi
        
    - name: Upload tfsec results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: tfsec.sarif

  test:
    name: Terratest
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        test: [basic, security, full]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Run Terratest
      run: |
        cd test
        go mod tidy
        go test -timeout 30m -v -run Test${{ matrix.test }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.test }}
        path: test/*.log

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Check README exists
      run: test -f README.md
      
    - name: Check examples exist
      run: |
        test -d examples/basic
        test -d examples/full
        test -d examples/advanced
        
    - name: Check documentation files
      run: |
        test -f LICENSE
        test -f CHANGELOG.md
        test -d docs 