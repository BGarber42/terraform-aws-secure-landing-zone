name: Release

on:
  push:
    tags:
      - 'v*'

env:
  AWS_DEFAULT_REGION: us-east-1

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Validate Examples
      run: |
        for example in examples/*/; do
          echo "Validating $example"
          cd "$example"
          terraform init
          terraform validate
          cd ../..
        done
        
    - name: Run Security Scan
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        working_directory: .
        format: sarif
        
    - name: Check if SARIF file exists
      run: |
        if [ -f tfsec.sarif ]; then
          echo "SARIF file found:"
          ls -la tfsec.sarif
          echo "File content preview:"
          head -20 tfsec.sarif
        else
          echo "SARIF file not found. Creating empty file for upload."
          echo '{"version":"2.1.0","$schema":"https://json.schemastore.org/sarif-2.1.0-rtm.5.json","runs":[]}' > tfsec.sarif
        fi
        
    - name: Upload tfsec results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: tfsec.sarif
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## What's Changed
          
          ### Features
          - Complete AWS Secure Landing Zone implementation
          - VPC with public/private subnets across multiple AZs
          - CloudTrail logging with centralized S3 storage
          - AWS Config with managed compliance rules
          - IAM baseline roles with least-privilege access
          - GuardDuty threat detection
          - Security Hub with CIS and PCI DSS standards
          - Macie data classification and privacy protection
          - Budget monitoring with cost alerts
          
          ### Examples
          - Basic configuration for minimal setup
          - Full configuration with all features enabled
          - Advanced configuration with Security Hub and Macie
          
          ### Testing
          - Comprehensive Terratest suite
          - Security scanning with tfsec
          - Automated CI/CD pipeline
          
          ### Documentation
          - Complete README with usage examples
          - Architecture documentation
          - GCP variant planning
          
        draft: false
        prerelease: false 